{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Documents/react/world-clock/src/component/countdown.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Countdown extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n        console.log(`Time left is ðŸš€ ${newTime}`);\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Countdown ended\");\n        }\n      }, 10);\n    };\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n    this.adjustTimer = input => {\n      const {\n        timerTime,\n        timerOn\n      } = this.state;\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 3600000 < 216000000) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 60000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  render() {\n    const {\n      timerTime,\n      timerStart,\n      timerOn\n    } = this.state;\n    let seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000 % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Countdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cross\",\n        onClick: () => this.props.close(\"countdown\"),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-header\",\n        children: \"Countdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-label\",\n        children: \"Hours : Minutes : Seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Countdown-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incHours\"),\n          children: \"\\u2B06\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incMinutes\"),\n          children: \"\\u2B06\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"incSeconds\"),\n          children: \"\\u2B06\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Countdown-time\",\n          children: [hours, \" : \", minutes, \" : \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decHours\"),\n          children: \"\\u2B07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decMinutes\"),\n          children: \"\\u2B07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.adjustTimer(\"decSeconds\"),\n          children: \"\\u2B07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), timerOn === false && (timerStart === 0 || timerTime === timerStart) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-start\",\n        onClick: this.startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), timerOn === true && timerTime >= 1000 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-stop\",\n        onClick: this.stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-start\",\n        onClick: this.startTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), (timerOn === false || timerTime < 1000) && timerStart !== timerTime && timerStart > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-reset\",\n        onClick: this.resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Countdown;","map":{"version":3,"names":["React","Component","Countdown","state","timerOn","timerStart","timerTime","startTimer","setState","timer","setInterval","newTime","console","log","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","componentWillUnmount","render","seconds","Math","floor","slice","minutes","hours","props","close"],"sources":["/Users/abhishek/Documents/react/world-clock/src/component/countdown.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\n\nclass Countdown extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0\n  };\n\n  startTimer = () => {\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      const newTime = this.state.timerTime - 10;\n      console.log(`Time left is ðŸš€ ${newTime}`);\n      if (newTime >= 0) {\n        this.setState({\n          timerTime: newTime\n        });\n      } else {\n        clearInterval(this.timer);\n        this.setState({ timerOn: false });\n        alert(\"Countdown ended\");\n      }\n    }, 10);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.timer);\n    this.setState({ timerOn: false });\n  };\n  resetTimer = () => {\n    if (this.state.timerOn === false) {\n      this.setState({\n        timerTime: this.state.timerStart\n      });\n    }\n  };\n\n  adjustTimer = (input) => {\n    const { timerTime, timerOn } = this.state;\n    if (!timerOn) {\n      if (input === \"incHours\" && timerTime + 3600000 < 216000000) {\n        this.setState({ timerTime: timerTime + 3600000 });\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n        this.setState({ timerTime: timerTime - 3600000 });\n      } else if (input === \"incMinutes\" && timerTime + 60000 < 216000000) {\n        this.setState({ timerTime: timerTime + 60000 });\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n        this.setState({ timerTime: timerTime - 60000 });\n      } else if (input === \"incSeconds\" && timerTime + 1000 < 216000000) {\n        this.setState({ timerTime: timerTime + 1000 });\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n        this.setState({ timerTime: timerTime - 1000 });\n      }\n    }\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  render() {\n    const { timerTime, timerStart, timerOn } = this.state;\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n\n    return (\n      <div className=\"Countdown\">\n        <span className=\"cross\" onClick={() => this.props.close(\"countdown\")}>\n          X\n        </span>\n        <div className=\"Countdown-header\">Countdown</div>\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n        <div className=\"Countdown-display\">\n          <button onClick={() => this.adjustTimer(\"incHours\")}>â¬†</button>\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>â¬†</button>\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>â¬†</button>\n\n          <div className=\"Countdown-time\">\n            {hours} : {minutes} : {seconds}\n          </div>\n\n          <button onClick={() => this.adjustTimer(\"decHours\")}>â¬‡</button>\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>â¬‡</button>\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>â¬‡</button>\n        </div>\n\n        {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n          <button className=\"Button-start\" onClick={this.startTimer}>\n            Start\n          </button>\n        )}\n        {timerOn === true && timerTime >= 1000 && (\n          <button className=\"Button-stop\" onClick={this.stopTimer}>\n            Stop\n          </button>\n        )}\n        {timerOn === false &&\n          timerStart !== 0 &&\n          timerStart !== timerTime &&\n          timerTime !== 0 && (\n            <button className=\"Button-start\" onClick={this.startTimer}>\n              Resume\n            </button>\n          )}\n\n        {(timerOn === false || timerTime < 1000) &&\n          timerStart !== timerTime &&\n          timerStart > 0 && (\n            <button className=\"Button-reset\" onClick={this.resetTimer}>\n              Reset\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default Countdown;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}